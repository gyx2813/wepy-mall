<style lang="less">
  @import "common/less/base";
  page {
    height: 100%;
    font-size:~'32rpx';
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    .main{
      height:100%;
      background: @eee;
    }
    .category{
      background: @fff;
    }
  }
</style>

<script>
import wepy from 'wepy'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    usingComponents: {
      'wxc-flex': '../packages/@minui/wxc-flex/dist/index',
    },
    pages: [
      'pages/index',//首页
      'pages/category',//分类
      'pages/cart',//购物车
      'pages/user',//个人中心
      'pages/list',//商品列表
      'pages/goodDetail',//商品详情
      'pages/myOrder',//我的订单
      'pages/orderInfo',//订单详情
      'pages/fillOrder',//确认订单
      'pages/addressManage',//地址管理
      'pages/editAdd',//地址编辑
      'pages/addNew'//新增地址
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#AB956D',
      navigationBarTitleText: '云返商城',
      navigationBarTextStyle: '#ffffff'
    },
    tabBar: {
      color: "#b7b7b7",
      selectedColor: "#AB956D",
      borderStyle: "#f5f5f5",
      backgroundColor: "#f5f5f5",
      list: [{
        pagePath: "pages/index",
        iconPath: "images/12.png",
        selectedIconPath: "images/11.png",
        text: "主页"
      }, {
        pagePath: "pages/category",
        iconPath: "images/22.png",
        selectedIconPath: "images/21.png",
        text: "分类"
      }, {
        pagePath: "pages/cart",
        iconPath: "images/32.png",
        selectedIconPath: "images/31.png",
        text: "购物车"
      }, {
        pagePath: "pages/user",
        iconPath: "images/42.png",
        selectedIconPath: "images/41.png",
        text: "我的"
      }]
    },
    networkTimeout: {
      request: 10000,
      connectSocket: 10000,
      uploadFile: 10000,
      downloadFile: 10000
    },
  }

  globalData = {
    userInfo: null
  }

  constructor () {
    // this is not allowed before super()
    super();
    this.use('promisify');
//    // 拦截request请求
//    this.intercept('request', {
//      // 发出请求时的回调函数
//      config (p) {
//        // 对所有request请求中的OBJECT参数对象统一附加时间戳属性
//        p.timestamp = + new Date();
//        console.log('config request: ', p);
//        // 必须返回OBJECT参数对象，否则无法发送请求到服务端
//        return p;
//      },
//
//      // 请求成功后的回调函数
//      success (p) {
//        // 可以在这里对收到的响应数据对象进行加工处理
//        console.log('request success: ', p);
//        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
//        return p;
//      },
//
//      //请求失败后的回调函数
//      fail (p) {
//        console.log('request fail: ', p);
//        // 必须返回响应数据对象，否则后续无法对响应数据进行处理
//        return p;
//      },
//
//      // 请求完成时的回调函数(请求成功或失败都会被执行)
//      complete (p) {
//        console.log('request complete: ', p);
//      }
//    });
  }

  onLaunch() {
    this.testAsync()
  }

  sleep (s) {
    return new Promise((resolve, reject) => {
      setTimeout(() => {
        resolve('promise resolved')
      }, s * 1000)
    })
  }

  async testAsync () {
    const data = await this.sleep(3)
    console.log(data)
  }

  getUserInfo(cb) {
    const that = this
    if (this.globalData.userInfo) {
      return this.globalData.userInfo
    }
    wepy.getUserInfo({
      success (res) {
        that.globalData.userInfo = res.userInfo
        cb && cb(res.userInfo)
      }
    })
  }
}
</script>
