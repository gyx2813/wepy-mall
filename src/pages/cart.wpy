<template>
  <view class="main">
    <view wx:if="{{hasList}}" class="cart-box">
      <view>
        <view class="title"><text>我的购物车</text><text class="edit" @tap="editCart">{{operateText}}</text></view>
        <repeat for="{{carts}}" index="idx">
          <view class="cart-item">
            <view class="shop-box">
              <view class="select-box">
                <icon wx:if="{{item.selected}}" type="success" color="#AB956D" data-index="{{idx}}" data-type="shop" @tap="selectList"/>
                <icon wx:else type="circle" data-index="{{idx}}" data-type="shop" @tap="selectList"/>
              </view>
              <text class="shopName">{{item.shopName}} ></text>
            </view>
            <repeat for="{{item.goodsList}}">
              <view class="cart-list">
                <view class="select-box">
                  <icon wx:if="{{item.selected}}" type="success" color="#AB956D" data-index="{{index}}" data-idx="{{idx}}" data-type="goods" @tap="selectList"/>
                  <icon wx:else type="circle" data-index="{{index}}" data-idx="{{idx}}" data-type="goods" @tap="selectList"/>
                </view>
                <view class="img-box">
                  <image src="{{item.src}}"></image>
                </view>
                <view class="detail">
                  <text class="goods-name">{{item.title}}</text>
                  <text class="goods-pro">{{item.skus}}</text>
                  <text class="goods-price">￥{{item.price}}</text>
                </view>
                <wxc-counter number="{{item.num}}" max="{{720}}" min="1" data-index="{{index}}" data-idx="{{idx}}" data-selected="{{item.selected}}" @changenumber="getNum" class="count"></wxc-counter>
              </view>
            </repeat>
          </view>
        </repeat>
      </view>
      <!--结算-->
      <view wx:if="{{isCount}}" class="cart-footer">
        <view class="footer-left">
          <view class="left-item">
            <view class="select-box">
              <icon wx:if="{{selectAllStatus}}" type="success" color="#AB956D" class="total-select" @tap="selectAll"/>
              <icon wx:else type="circle" class="total-select" @tap="selectAll"/>
            </view>
            <text>全选</text>
          </view>
          <text class="cart-toatl-price">订单总价：￥{{totalPrice}}</text>
        </view>
        <view class="footer-right">结算({{selectNum}})</view>
      </view>
      <!--删除管理-->
      <view wx:else class="cart-footer">
        <view class="footer-left">
          <view class="left-item">
            <view class="select-box">
              <icon wx:if="{{selectAllStatus}}" type="success" color="#AB956D" class="total-select" @tap="selectAll"/>
              <icon wx:else type="circle" class="total-select" @tap="selectAll"/>
            </view>
            <text>全选</text>
          </view>
        </view>
        <view class="footer-right">删除({{selectNum}})</view>
      </view>
    </view>
    <view wx:else>
      <view class="cart-no-data">购物车是空的哦~</view>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  export default class Cart extends wepy.page {
    config = {
      navigationBarTitleText: '购物车',
      usingComponents: {
        'wxc-counter': '../../packages/@minui/wxc-counter/dist/index',
        'wxc-icon':'../../packages/@minui/wxc-icon/dist/index'
      }
    };
    data = {
      carts:[],               // 购物车列表
      selectedArr:[],
      hasList:false,          // 列表是否有数据
      totalPrice:0,           // 总价，初始为0
      selectAllStatus:false,    // 全选状态，默认全选
      isCount:true,
      operateText:'编辑',
      selectNum:0,
    };
    onShow() {
      this.hasList = true
      this.carts = [
        {
          shopId:1,
          shopName: '密西西比的果蔬店',
          selected:false,
          goodsList:[
            {id:1,title:'芹菜',src:'/images/s5.png',num:4,price:1.20,skus:'包装-500g',selected:false},
            {id:2,title:'素米',src:'/images/s4.png',num:1,price:1.40,skus:'10kg装',selected:false}
          ]
        },
        {
          shopId:2,
          shopName: '都妈妈的水果店',
          selected:false,
          goodsList:[
            {id:1,title:'瓜子',src:'/images/s6.png',num:4,price:2.70,skus:'包装-500g',selected:false}
          ]
        }
      ]
    };
    methods = {
      //编辑购物车
      editCart(){
        if(this.isCount){
          this.isCount = false
          this.operateText = '保存'
        }else {
          this.isCount = true
          this.operateText = '编辑'
        }
      },
      //当前商品选中事件
      selectList(e) {
        let type = e.target.dataset.type
        let index = e.target.dataset.index
        let idx = e.target.dataset.idx
        let carts = this.carts
         //选中整个店铺
        if(type === 'shop') {
          carts[index].selected = !carts[index].selected
          carts[index].goodsList.forEach(val => {
            val.selected = carts[index].selected
          })
          this.carts = carts
        }else {
          carts[idx].goodsList[index].selected = !carts[idx].goodsList[index].selected
          this.carts = carts
          //判断是否选中整个店铺
          this.isStoreSelect(idx)
        }
        this.getTotalPrice()
        this.isSelectAll()
      },
      /**
       * 删除购物车当前商品
       */
      deleteList(e) {
        const index = e.currentTarget.dataset.index;
        let carts = this.data.carts;
        carts.splice(index,1);
        this.carts = carts
        if(!carts.length){
          this.hasList = false
        }else{
          this.getTotalPrice();
        }
      },

      /**
       * 购物车全选事件
       */
      selectAll(e) {
        this.selectAllStatus = !this.selectAllStatus
        let state = this.selectAllStatus
        this.carts.forEach(value => {
          value.selected = state
          value.goodsList.forEach(goodsVal => {
            goodsVal.selected = state
          })
        })
        this.getTotalPrice()
      },
      /**
       * 绑定加数量事件
       */
      addCount(e) {
        const index = e.currentTarget.dataset.index;
        let carts = this.data.carts;
        let num = carts[index].num;
        num = num + 1;
        carts[index].num = num;
       this.carts = carts
        this.getTotalPrice();
      },

      /**
       * 绑定减数量事件
       */
      minusCount(e) {
        const index = e.currentTarget.dataset.index;
        let carts = this.data.carts;
        let num = carts[index].num;
        if(num <= 1){
          return false;
        }
        num = num - 1;
        carts[index].num = num;
        this.carts = carts
        this.getTotalPrice();
      },
      getNum(e){
        let selected = e.target.dataset.selected
        let idx = e.target.dataset.idx
        let index = e.target.dataset.index
        this.carts[idx].goodsList[index].num = e.detail.number
        if(selected){
          this.getTotalPrice()
        }
      }
    }
    /**
     * 计算总价
     */
    getTotalPrice() {
      let price = 0,
        num = 0,
        inter = 0
      this.carts.forEach( value => {
        value.goodsList.forEach(goodsVal => {
          if(goodsVal.selected) {
            price += goodsVal.price * goodsVal.num
            num +=  goodsVal.num
          }
        })
      })
      this.totalPrice = parseFloat(price).toFixed(2)
      this.selectNum = num
    };
    //判断是否选中整个店铺
    isStoreSelect(idx){
      let flag = true
      this.carts[idx].goodsList.forEach(val => {
        if(!val.selected) {
          flag = false
        }
      })
      if(flag) {
        this.carts[idx].selected = true
      }else {
        this.carts[idx].selected = false
      }
    };
    //判断是否全选
    isSelectAll () {
      let flag = true;
      this.carts.forEach(value=> {
        if(!value.selected) {
          flag = false;
        }
      })
      if(flag){
        this.selectAllStatus = true;
      }else{
        this.selectAllStatus = false;
      }
    };
    watch = {
      selectedArr(newval){
        if(newval>=this.carts.length){
          this.selectAllStatus = true
          console.log('11111')
        }else{
          this.selectAllStatus = false
          console.log('00000')
        }
      }
    }
  }
</script>
<style lang="less">
  @import "../common/less/base";
  .title{
    padding:~'20rpx';
    .sc(~'30rpx',#333);
    display: flex;
    justify-content: space-between;
    align-items: center;
    .edit{.sc(~'26rpx',@999)}
  }
  .cart-box{
    width: 100%;
    padding-bottom: ~'100rpx';
  }
  .cart-item{
    background: @fff;margin-bottom:~'20rpx' }
  .shop-box{
    padding:~'16rpx 20rpx';
    display: flex;
    border-bottom:~'1rpx solid #eee';
    .select-box{
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }
    .shopName{.sc(~'26rpx',@333);padding-left:~'20rpx';display:flex;align-items:center;}
  }
  .cart-list{
    position: relative;
    display: flex;
    padding: ~'20rpx';
    border-bottom:~'1rpx solid #eee';
    background: @fff;
    .select-box{
      display: flex;
      justify-content: center;
      align-items: center;
      flex-direction: column;
    }
    .img-box{.wh(~'200rpx',~'200rpx');margin:~'0 20rpx';image{width:100%;height:100%}}
    .detail{
      display:flex;
      flex-direction: column;
      justify-content: space-between;
      .goods-name{
        .sc(~'26rpx',@333)
      }
      .goods-pro{
        .sc(~'24rpx',@999)
      }
      .goods-price{
        display: flex;
        justify-content: space-between;
        .sc(~'26rpx',@red);
        .num{
          .sc(~'30rpx',@999);
          position: absolute;
          bottom: ~'20rpx';
          right:~'20rpx';
        }
      }
    }
    .count{
      position: absolute;
      bottom:~'20rpx';
      right:~'20rpx';
    }
  }
  .cart-count-down,.cart-count-add{
    font-size: ~'44rpx';
    width: ~'50rpx';
    height: 100%;
  }
  .cart-count-num{
    width: ~'150rpx';
  }
  .cart-footer{
    position: fixed;
    bottom: 0;
    left: 0;
    .wh(100%,~'90rpx');
    box-sizing: border-box;
    display: flex;
    background: @fff;
    .footer-left{
      width:70%;
      display: flex;
      padding: ~'0 20rpx';
      justify-content: space-between;
      align-items: center;
      .left-item{
        display: flex;
        align-items: center;
        .sc(~'26rpx',@333);
        .select-box{
          display: flex;
          align-items: center;
          padding-right:~'20rpx';
        }
      }
      .cart-toatl-price{
        .sc(~'26rpx',@red)
      }
    }
    .footer-right{
      width:30%;
      background:@themeColor;
      .sc(~'30rpx',@fff);
      display:flex;
      justify-content: center;
      align-items: center;
    }
  }
</style>
